name: Deploy to Cloud Run

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Build JAR
        run: ./mvnw clean package -DskipTests

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure gcloud project
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region us-central1
          gcloud config set artifacts/location us-central1

      - name: Build Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/spring-docker-repo/products-api .

      - name: Authenticate Docker with Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Push Docker image
        run: |
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/spring-docker-repo/products-api

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy spring-products-api \
            --image=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/spring-docker-repo/products-api \
            --platform=managed \
            --region=us-central1 \
            --allow-unauthenticated \
            --set-env-vars="SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }},SPRING_DB_URL=${{ secrets.SPRING_DB_URL }},SPRING_DB_USERNAME=${{ secrets.SPRING_DB_USERNAME }},SPRING_DB_PASSWORD=${{ secrets.SPRING_DB_PASSWORD }}"
